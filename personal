task.wait(15)

_G.teleportToBestArea = false
_G.potatoGraphics = false
_G.customEggHatch = false
_G.notifyNewHuge = true

if _G.teleportToBestArea then
    task.wait(5)
    if game.PlaceId == 17503543197 then
        game:GetService("ReplicatedStorage").Network.Teleports_RequestTeleport:InvokeServer("Hacker Mainframe")
    end
end

if _G.potatoGraphics then
    task.wait(15)
    pcall(function()
        for _, v in pairs(game:GetService("Workspace"):FindFirstChild("__THINGS"):GetChildren()) do
            if table.find({"ShinyRelics", "Ornaments", "Instances", "Ski Chairs"}, v.Name) then
                v:Destroy()
            end
        end
    
        for _, v in pairs(game:GetService("Workspace"):FindFirstChild("__THINGS").__INSTANCE_CONTAINER.Active.AdvancedFishing:GetChildren()) do
            if string.find(v.Name, "Model") or string.find(v.Name, "Water") or string.find(v.Name, "Debris") or string.find(v.Name, "Interactable") then
                v:Destroy()
            end
    
            if v.Name == "Map" then
                for _, v in pairs(v:GetChildren()) do
                    if v.Name ~= "Union" then
                        v:Destroy()
                    end
                end
            end
        end
    
        game:GetService("Workspace"):WaitForChild("ALWAYS_RENDERING"):Destroy()
    end)
    
    local Workspace = game:GetService("Workspace")
    local Terrain = Workspace:WaitForChild("Terrain")
    Terrain.WaterReflectance = 0
    Terrain.WaterTransparency = 1
    Terrain.WaterWaveSize = 0
    Terrain.WaterWaveSpeed = 0
    
    local Lighting = game:GetService("Lighting")
    Lighting.Brightness = 0
    Lighting.GlobalShadows = false
    Lighting.FogEnd = 9e100
    Lighting.FogStart = 0
    
    sethiddenproperty(Lighting, "Technology", 2)
    sethiddenproperty(Terrain, "Decoration", false)
    
    local function clearTextures(v)
        if v:IsA("BasePart") and not v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.Transparency = 1
        elseif (v:IsA("Decal") or v:IsA("Texture")) then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        elseif v:IsA("SpecialMesh")  then
            v.TextureId = 0
        elseif v:IsA("ShirtGraphic") then
            v.Graphic = 1
        elseif (v:IsA("Shirt") or v:IsA("Pants")) then
            v[v.ClassName .. "Template"] = 1
        elseif v.Name == "Foilage" and v:IsA("Folder") then
            v:Destroy()
        elseif string.find(v.Name, "Tree") or string.find(v.Name, "Water") or string.find(v.Name, "Bush") or string.find(v.Name, "grass") then
            task.wait()
            v:Destroy()
        end
    end
    
    game:GetService("Lighting"):ClearAllChildren()
    
    for _, v in pairs(Workspace:GetDescendants()) do
        clearTextures(v)
    end
    
    Workspace.DescendantAdded:Connect(function(v)
        clearTextures(v)
    end)
    
    for _, v in pairs(game.Players:GetChildren()) do
        for _, v2 in pairs(v.Character:GetDescendants()) do
            if v2:IsA("BasePart") or v2:IsA("Decal") then
                v2.Transparency = 1
            end
        end
    end
    
    game.Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function(character)
            for _, v in pairs(character:GetDescendants()) do
                if v:IsA("BasePart") or v:IsA("Decal") then
                    v.Transparency = 1
                end
            end
        end)
    end)
    
    for i,v in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
        if v:IsA("ScreenGui") then
            v.Enabled = false
        end
    end
    
    for i, v in pairs(game:GetService("StarterGui"):GetChildren()) do
        if v:IsA("ScreenGui") then
            v.Enabled = false
        end
    end
    
    for i, v in pairs(game:GetService("CoreGui"):GetChildren()) do
        if v:IsA("ScreenGui") then
            v.Enabled = false
        end
    end
end

local HttpService = game:GetService("HttpService")
local encodedCollection
local Collection

while true do
    pcall(function()
        encodedCollection = request({Url = "https://biggamesapi.io/api/collection/Pets", Method = "GET",Headers = {["Content-Type"] = "application/json"}})
        Collection = game:GetService("HttpService"):JSONDecode(encodedCollection.Body)
    end)
    if Collection then break end
    task.wait(5)
end

local Library = require(game.ReplicatedStorage:WaitForChild('Library'))

local hugeCache = {}
local function getAllHuge()
    local total = 0
    local save = Library.Save.Get().Inventory
    local newHuges = {}
    for i, v in pairs(save.Pet) do
        if string.find(v.id, "Huge") then
            total = total + 1
            if not hugeCache[i] then
                hugeCache[i] = v
                newHuges[i] = v
            end
        end
    end
    return total, newHuges
end

local startingHuge = getAllHuge()

local function update()
    local currentHuge, newHuges = getAllHuge()

    for i, v in newHuges do
        local rbxImgId = ""
        local prefix = ""
        if v.pt == 1 then prefix = "Golden " end
        if v.pt == 2 then prefix = "Rainbow " end
        print(v.id)
        for ii, vv in Collection.data do
            if vv.configName == v.id then
                local thumbnail = vv.configData.thumbnail
                if v.pt == 1 then thumbnail = vv.configData.goldenThumbnail end
                rbxImgId = string.sub(thumbnail, 14)
            end
        end
        request({
            Url = "https://discord.com/api/webhooks/1240508523901878332/omkBYaszkqIKet2yYmcBCpnjoTB0wNzRbb2cEDAlv1TrKJZDmfxzAqNCmVHUqmHBcC-2",
            Method = "POST",
            Headers = {
            ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode({
            ["content"] = "<@798895543648387102>",
            ["embeds"] = {
                {
                ["title"] = "You got a ".. prefix .. v.id,
                ["color"] = 393165,
                ["thumbnail"] = {
                    ["url"] = "https://biggamesapi.io/image/" .. rbxImgId
                }
                }
            },
            ["attachments"] = {}
            })
        })
        task.wait(10)
    end
end

spawn(function()
    while _G.notifyNewHuge do
        wait(1)                
        pcall(function()
            update()
        end)
    end
end)
